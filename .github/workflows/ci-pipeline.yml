name: CI Pipeline

on:
  push:
    branches:
      - main
    tags:
      - 'v*'  # Uruchamia workflow dla tagów zaczynających się od "v"
  pull_request:
    branches:
      - main

jobs:
  lint:
    name: Code Linting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Super-Linter
        uses: github/super-linter@v4
        env:
          VALIDATE_ALL_CODEBASE: false
          VALIDATE_PYTHON_PYLINT: true
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  unit-tests:
    name: Unit Tests with Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests with coverage
        run: |
          export PYTHONPATH=.
          pytest --cov=. --cov-report=xml --cov-report=html

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: htmlcov/

  todo-check:
    name: Detect TODOs
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Find TODOs
        run: |
          grep -r "TODO" . > temp_todo_report.txt || true
          mv temp_todo_report.txt todo_report.txt
          if [ -s todo_report.txt ]; then
            echo "TODOs found, creating an issue"
          else
            echo "No TODOs found"
          fi

      - name: Create GitHub Issue for TODOs
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "Found TODOs in code"
          content-filepath: todo_report.txt
          token: ${{ secrets.GH_TOKEN }}

  publish:
    name: Publish to TestPyPI
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Build and publish package
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TWINE_TEST_PASSWORD }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload --repository-url https://test.pypi.org/legacy/ dist/*
